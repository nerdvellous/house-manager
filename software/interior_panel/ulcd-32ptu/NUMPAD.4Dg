#platform "uLCD-32PTU"

#inherit "4DGL_16bitColours.fnc"
#inherit "VisualConst.inc"
#inherit "NUMPADConst.inc"
#inherit "KBRoutines.inc"
#inherit "PrintDisk.inc"
#inherit "LEDDIGITSDISPLAY.inc"

#STACK 1500

/*
 * NUMPAD
 */

#constant DIGITS 4

var x, y;
var k;
var value;
var code[5];
var numpad_exit;
var command;
var form := "numpad";

func KbHandler(var Key)
    var i, power;
    if (Key == 100) // backspace
        if (k)
            code[k] := 0;
            k--;
        endif
     else if (Key == 110)
        numpad_exit := 1;
    else if (k < DIGITS)
        code[k] := Key;
        k++;
    endif

    power:=1;
    value:=0;
    for (i := (k-1); i >= 0; i--)
        value:= value+code[i]*power;
        power:=power*10;
    next

    update();
endfunc

func update()
     if (value)
        ledDigitsDisplay(value, iledCode+1, 40, 4, 1, 40, 1);
    else
        gfx_PenSize(SOLID);
        gfx_Rectangle(0,0,239,80,BLACK);
    endif
endfunc

func numpad()
  var i, state, n;

    hndl := file_LoadImageControl("NUMPAD.dat", "NUMPAD.gci", 0);
    img_Show(hndl, iledCode);  // show all digits at 0, only do this once
    ledDigitsDisplay(0, iledCode+1, 40, 4, 1, 40, 1);

    gfx_Set(SCREEN_MODE,PORTRAIT);
    k := 0;
    value := 0;
    for (i := 0; i < DIGITS; i++)
        code[i] := 0;
    next
    update();

    img_Show(hndl,ikeyboard1) ; // show initialy, if required
    for (i := ikeyboard1+1; i <= ikeyboard1+okeyboard1[KbButtons]; i++)
        img_SetWord(hndl, i, IMAGE_FLAGS, (img_GetWord(hndl, i, IMAGE_FLAGS) | I_STAYONTOP) & ~I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    next

    touch_Set(TOUCH_ENABLE);                            // enable the touch screen

    repeat

        state := touch_Get(TOUCH_STATUS);               // get touchscreen status
        n := img_Touched(hndl,-1) ;

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_PRESSED)                        // if there's a press
            x := touch_Get(TOUCH_GETX);
            y := touch_Get(TOUCH_GETY);
            if ((n >= ikeyboard1) && (n <= ikeyboard1+okeyboard1[KbButtons]))
                kbDown(ikeyboard1, okeyboard1, ikeyboard1keystrokes, n-ikeyboard1, KbHandler) ;
            endif
        endif

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_RELEASED)                      // if there's a release
            if (okeyboard1[KbDown] != -1) kbUp(ikeyboard1, okeyboard1) ;
        endif

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_MOVING)                       // if it's moving
            x := touch_Get(TOUCH_GETX);
            y := touch_Get(TOUCH_GETY);
        endif

    until(numpad_exit);
    numpad_exit := 0;
    gfx_Cls();
    mem_Free(hndl);
    form := "menu";
endfunc

/*
 * MENU
 */

#CONST
    ibtnBack        // offset 0x0
#END

var menu_exit;

func menu()
var x, y, state, n;

    hndl := file_LoadImageControl("MENU.dat", "MENU.gci", 0);

    // btnBack 1.0 generated 26/02/2014 14:52:03
    img_ClearAttributes(hndl, ibtnBack, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, ibtnBack);  // show button, only do this once
    //img_SetWord(hndl, ibtnBack, IMAGE_INDEX, state); // where state is 0 for up and 1 for down
    img_Show(hndl,ibtnBack) ;

    touch_Set(TOUCH_ENABLE);

    repeat

        state := touch_Get(TOUCH_STATUS);               // get touchscreen status
        n := img_Touched(hndl,-1) ;

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_PRESSED)                        // if there's a press
            x := touch_Get(TOUCH_GETX);
            y := touch_Get(TOUCH_GETY);
            if (n == ibtnBack)
                img_SetWord(hndl, ibtnBack, IMAGE_INDEX, 1); // where state is 0 for up and 1 for down
                img_Show(hndl,ibtnBack) ;
                command := "back";
                menu_exit := 1 ;
            endif
        endif

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_RELEASED)                      // if there's a release
            if (n == ibtnBack)
                img_SetWord(hndl, ibtnBack, IMAGE_INDEX, 0); // where state is 0 for up and 1 for down
                img_Show(hndl,ibtnBack);
            endif
        endif

        //-----------------------------------------------------------------------------------------
        if(state == TOUCH_MOVING)                       // if it's moving
            x := touch_Get(TOUCH_GETX);
            y := touch_Get(TOUCH_GETY);
        endif

    until (menu_exit);
    menu_exit := 0;
    gfx_Cls();
    mem_Free(hndl);
    if (command == "back")
        form := "numpad";
    endif
endfunc

/*
 * MAIN
 */

func main()

     repeat
        if (form == "numpad")
            numpad();
        else if (form == "menu")
             menu();
        endif
     forever
endfunc
